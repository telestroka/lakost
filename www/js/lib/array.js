function array_keys(input,search_value,strict){var tmp_arr=new Array(),strict=!!strict,include=true,cnt=0;for(key in input){include=true;if(search_value!=undefined){if(strict&&input[key]!==search_value){include=false}else if(input[key]!=search_value){include=false}}if(include){tmp_arr[cnt]=key;cnt++}}return tmp_arr};
function array_key_exists(key,search){if(!search||(search.constructor!==Array&&search.constructor!==Object)){return false}return search[key]!==undefined};
function array_rand(input,num_req){var Indexes=[];var Ticks=num_req||1;var Check={Duplicate:function(input,value){var Exist=false,Index=0;while(Index<input.length){if(input[Index]===value){Exist=true;break}Index++}return Exist}};if(input instanceof Array&&Ticks<=input.length){while(true){var Rand=Math.floor((Math.random()*input.length));if(Indexes.length===Ticks){break}if(!Check.Duplicate(Indexes,Rand)){Indexes.push(Rand)}}}else{Indexes=null}return((Ticks==1)?Indexes.join():Indexes)};
function array_reverse(array){return array.reverse()};
function array_search(needle,haystack,strict){var strict=!!strict;for(var key in haystack){if((strict&&haystack[key]===needle)||(!strict&&haystack[key]==needle)){return key}}return false};
function array_sum(array){var key,sum=0;if(!array||(array.constructor!==Array&&array.constructor!==Object)||!array.length){return null}for(var key in array){sum+=array[key]}return sum};
function array_unique(array){var p,i,j;for(i=array.length;i;){for(p=--i;p>0;){if(array[i]===array[--p]){for(j=p;--p&&array[i]===array[p];);i-=array.splice(p+1,j-p).length}}}return true};
function array_values(input){var tmp_arr=new Array(),cnt=0;for(key in input){tmp_arr[cnt]=input[key];cnt++}return tmp_arr};
function count(mixed_var,mode){var key,cnt=0;if(mode=='COUNT_RECURSIVE')mode=1;if(mode!=1)mode=0;for(key in mixed_var){cnt++;if(mode==1&&mixed_var[key]&&(mixed_var[key].constructor===Array||mixed_var[key].constructor===Object)){cnt+=count(mixed_var[key],1)}}return cnt};
function end(array){var last_elm,key;if(array.constructor===Array){last_elm=array[(array.length-1)]}else{for(key in array){last_elm=array[key]}}return last_elm};
function implode(glue,pieces){return((pieces instanceof Array)?pieces.join(glue):pieces)};
function in_array(needle,haystack,strict){var found=false,key,strict=!!strict;for(key in haystack){if((strict&&haystack[key]===needle)||(!strict&&haystack[key]==needle)){found=true;break}}return found};
function is_array(mixed_var){return(mixed_var instanceof Array)};
function range(low,high,step){var matrix=[];var inival,endval,plus;var walker=step||1;var chars=false;if(!isNaN(low)&&!isNaN(high)){inival=low;endval=high}else if(isNaN(low)&&isNaN(high)){chars=true;inival=low.charCodeAt(0);endval=high.charCodeAt(0)}else{inival=(isNaN(low)?0:low);endval=(isNaN(high)?0:high)}plus=((inival>endval)?false:true);if(plus){while(inival<=endval){matrix.push(((chars)?String.fromCharCode(inival):inival));inival+=walker}}else{while(inival>=endval){matrix.push(((chars)?String.fromCharCode(inival):inival));inival-=walker}}return matrix};
function reset(array){var first_elm,key;if(array.constructor===Array){first_elm=array[0]}else{for(key in array){first_elm=array[key];break}}return first_elm};
function serialize(mixed_val){switch(typeof(mixed_val)){case"number":if(isNaN(mixed_val)||!isFinite(mixed_val)){return false}else{return(Math.floor(mixed_val)==mixed_val?"i":"d")+":"+mixed_val+";"}case"string":return"s:"+mixed_val.length+":\""+mixed_val+"\";";case"boolean":return"b:"+(mixed_val?"1":"0")+";";case"object":if(mixed_val==null){return"N;"}else if(mixed_val instanceof Array){var idxobj={idx:-1};var map=[]for(var i=0;i<mixed_val.length;i++){idxobj.idx++;var ser=serialize(mixed_val[i]);if(ser){map.push(serialize(idxobj.idx)+ser)}}return"a:"+mixed_val.length+":{"+map.join("")+"}"}else{var class_name=get_class(mixed_val);if(class_name==undefined){return false}var props=new Array();for(var prop in mixed_val){var ser=serialize(mixed_val[prop]);if(ser){props.push(serialize(prop)+ser)}}return"O:"+class_name.length+":\""+class_name+"\":"+props.length+":{"+props.join("")+"}"}case"undefined":return"N;"}return false};
function shuffle(array){for(var j,x,i=array.length;i;j=parseInt(Math.random()*i),x=array[--i],array[i]=array[j],array[j]=x);return true};
function unset_in_array(index,array){delete array[index];return array};